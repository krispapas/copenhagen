# Initialize git repository locally
git init

# Add all files to git
git add .

# Create initial commit
git commit -m "Initial commit: Trip planner setup"


# First, create a Next.js project with the required dependencies
npx create-next-app@latest trip-planner --typescript --tailwind --use-npm

# Install required UI components

npm install @shadcn/ui lucide-react

# Deploy to Vercel
npm install -g vercel
vercel
# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem
.env.local
.env.development.local
.env.test.local
.env.production.local

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# IDE
.idea
.vscode

# Technologies Used

- Next.js
- React
- Tailwind CSS
- shadcn/ui components

## Contributing

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/amazing-feature`)
3. Commit your changes (`git commit -m 'Add some amazing feature'`)
4. Push to the branch (`git push origin feature/amazing-feature`)
5. Open a Pull Request

# Create a new repository on GitHub first (don't initialize with README)
# Then connect your local repository:

# Add the remote repository
git remote add origin https://github.com/your-username/trip-planner.git

# Push your code to GitHub
git push -u origin main

{
  "name": "trip-planner",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@radix-ui/react-alert-dialog": "^1.0.5",
    "@radix-ui/react-slot": "^1.0.2",
    "@shadcn/ui": "latest",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "lucide-react": "^0.263.1",
    "next": "14.0.0",
    "react": "^18",
    "react-dom": "^18",
    "tailwind-merge": "^2.0.0",
    "tailwindcss-animate": "^1.0.7"
  },
  "devDependencies": {
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "autoprefixer": "^10",
    "eslint": "^8",
    "eslint-config-next": "14.0.0",
    "postcss": "^8",
    "tailwindcss": "^3",
    "typescript": "^5"
  }
}

# Install dependencies
npm install

# Run development server
npm run dev

# Build project to test production build
npm run build

